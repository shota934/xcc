#! /bin/bash
try(){
    expected="$1"
    input="$2"
    testcase="$3"
    ./xcc "$input"
    gcc -o tmp tmp.s
    ./tmp
    actual="$?"

    if [ "$actual" = "$expected" ]; then
	echo "$input => $actual"
	echo $testcase
    else
	echo "$expected expected, but got $actual"
	exit 1
    fi
}

try 100 test/test_array.c            "Passed array."
try 20  test/test_if.c               "Passed if."
try 40  test/test_if_else.c          "Passed if-else."
try 21  test/test_fun.c              "Passed function call."
try 45  test/test_while.c            "Passed while loop."
try 45  test/test_while_inc.c        "Passed while loop by increment."
try 45  test/test_for.c              "Passed for loop."
try 45  test/test_for_inc.c          "Passed for loop by increment."
try 55  test/test_recursive_sum.c    "Passed recursive calling function."
try 10  test/test_struct.c           "Passed structure as parameter when function calls."
try 10  test/test_pointer.c          "Passed reference parameter as parameter when function calls."
try 200 test/struct_pointer.c        "Passed the pointer of structure as parameter when function calls."
try 244 test/struct_pointer2.c       "Passed the pointer of structure as parameter when function calls."
try 60  test/test_func_decl.c        "Passed function declaration."
try 100 test/test_static_func.c      "Passed static function."
try 200 test/test_extern_func.c      "Passed extern function."
try 70  test/test_comment1.c         "Passed comment style1."
try 90  test/test_comment2.c         "Passed comment style2."
try 110 test/test_comment3.c         "Passed comment style3."
try 170 test/test_hex1.c             "Passed hex value case 1."
try 255 test/test_hex2.c             "Passed hex value case 2."
try 31  test/test_hex3.c             "Passed hex value case 3."
try 30  test/test_function_pointer.c "Passed function pointer."
try 21  test/test_typedef1.c         "Passed test typedef1."
try 20  test/test_typedef2.c         "Passed test typedef2."
try 30  test/test_typedef3.c         "Passed test typedef3."
try 50  test/test_union.c            "Passed test union."
try 201 test/test_define_obj.c       "Passed test define_obj."
try 5   test/test_func_like_macro.c  "Passed test func like macro."
try 100 test/test_macro_if.c         "Passed test macro if."
try 200 test/test_macro_if_else.c    "Passed test macro if_else."
try 110 test/test_macro_if_not.c     "Passed test macro if_not."
try 13  test/test_const1.c            "Passed test const1."
try 40  test/test_const2.c            "Passed test const2."
try 80  test/test_macro_defined.c     "Passed test macro defined."
try 50  test/test_macro_elif.c        "Passed test macro elif."
try 10  test/test_long.c              "Passed test long."
try 1   test/test_and.c               "Passed test and."
try 3   test/test_or.c                "Passed test or."
try 254 test/test_bit_reversal.c      "Passed test bit reversal."
try 1   test/test_logical_not.c       "Passed test logical not."
try 254 test/test_xor.c               "Passed test logical xor"
try 10  test/test_not_macro.c         "Passed test_not_macro."
try 8   test/test_sizeof_int.c        "Passed type size of int."
try 8   test/test_sizeof_long.c       "Passed type size of long."
try 3   test/test_include.c           "Passed test include."
try 20  test/test_typedef_struct1.c   "Passed test typedef struct1."
try 10  test/test_typedef_struct2.c   "Passed test typedef struct2."
try 60  test/test_include_stdio.c     "Passed test_include_stdio"
try 1  test/test_equal.c              "Passed test equal."
try 2  test/test_not_equal.c          "Passed test not equal."
try 1  test/test_greater.c            "Passed test greater."
try 1  test/test_greater_than.c       "Passed test greater."
try 10 test/test_switch1.c            "Passed test switch 1."
try 20 test/test_switch2.c            "Passed test switch 2."
try 30 test/test_switch3.c            "Passed test switch 3."
try 8  test/test_sizeof.c             "Passed test sizeof  ."
try 10  test/test_malloc1.c           "Passed test malloc1."
try 200 test/test_malloc2.c           "Passed test malloc2."
try 140 test/test_malloc3.c           "Passed test malloc3."
echo "Passed all Test cases."
